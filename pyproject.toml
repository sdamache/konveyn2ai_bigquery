[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "konveyn2ai"
version = "0.1.0"
description = "KonveyN2AI - Agentic AI Application with 3-tier architecture for hackathon"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "KonveyN2AI Team", email = "team@konveyn2ai.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"

[tool.poetry]
name = "konveyn2ai"
version = "0.1.0"
description = "KonveyN2AI - Agentic AI Application with 3-tier architecture for hackathon"
authors = ["KonveyN2AI Team <team@konveyn2ai.dev>"]
readme = "README.md"
license = "MIT"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
google-cloud-aiplatform = ">=1.38.0"
google-generativeai = ">=0.3.0"
streamlit = ">=1.28.0"
fastapi = ">=0.104.0"
uvicorn = {extras = ["standard"], version = ">=0.24.0"}
numpy = ">=1.24.0"
pandas = ">=2.0.0"
python-dotenv = ">=1.0.0"
pydantic = ">=2.5.0"
requests = ">=2.31.0"
aiohttp = ">=3.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "==7.4.4"
black = "==25.1.0" 
ruff = "==0.1.15"
mypy = "==1.8.0"
bandit = "==1.8.6"
pre-commit = "==3.6.2"

[project.urls]
Homepage = "https://github.com/sdamache/konveyn2ai_bigquery"
Repository = "https://github.com/sdamache/konveyn2ai_bigquery.git"
Issues = "https://github.com/sdamache/konveyn2ai_bigquery/issues"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
# Allow imports after sys.path.append for project structure
"src/*/main.py" = ["E402"]
"src/*/advisor.py" = ["E402"]
"src/*/test_*.py" = ["E402"]
"tests/utils/service_imports.py" = ["B904"]  # Exception chaining not needed for utility functions
"tests/utils/test_helpers.py" = ["B904"]  # Exception chaining not needed for test helpers
# M1 Ingestion specific ignores
"src/ingest/*/parser.py" = ["C901"]  # Complex parsers allowed
"tests/**/*" = ["B011"]  # Test fixtures can modify arguments

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

# M1 Ingestion specific overrides
[[tool.mypy.overrides]]
module = [
    "google.cloud.*",
    "kubernetes.*",
    "libcst.*",
    "ulid.*",
    "cobol.*",
    "pygtm.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short"
]
# M1 Ingestion test markers
markers = [
    "unit: Unit tests",
    "integration: Integration tests (requires BigQuery)",
    "contract: Contract tests (schema validation)",
    "slow: Slow running tests",
    "bigquery: Tests that require BigQuery access"
]
